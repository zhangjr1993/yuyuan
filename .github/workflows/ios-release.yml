name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.24.4'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub upgrade
          
       # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
#       添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"
      # 打印 Xcode 版本信息
      - name: Print Xcode Version
        run: |
          xcodebuild -version
          echo "Xcode Path: $(xcode-select -p)"
          swift --version
          
      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
            
          certificate-base64: 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

          certificate-password: 123456
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      # - name: 检查构建文件
      #   run: |
      #     echo "检查 build/ios/ipa 目录内容："
      #     ls -la build/ios/ipa/
      #     echo "检查 build/ios 目录内容："
      #     ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa
          
#      - name: Check IPA Path
#        run: |
#          echo "=================== IPA Location Check ==================="
#          echo "Checking build/ios directory:"
#          ls -R build/ios/
#          
#          echo "\nChecking for IPA files in build directory:"
#          find build -name "*.ipa" -type f
#          
#          echo "\nChecking specific paths:"
#          for path in \
#            "build/ios/ipa" \
#            "build/ios/archive/Runner.xcarchive/Products/Applications" \
#            "build/ios/Release-iphoneos"
#          do
#            echo "\nChecking $path:"
#            if [ -d "$path" ]; then
#              ls -la "$path"
#            else
#              echo "Directory does not exist: $path"
#            fi
#          done

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/roleplaychat.ipa"
          APPLE_ID: "landiruediig@hotmail.com"
          APP_SPECIFIC_PASSWORD: "prvz-gymk-ibrt-jhsn"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose


